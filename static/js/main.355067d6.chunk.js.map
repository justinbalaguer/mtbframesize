{"version":3,"sources":["App.js","reportWebVitals.js","index.js"],"names":["Headings","Footer","href","App","useState","usInputFeet","setUsInputFeet","usInputInches","setUsInputInches","metricInputCm","setMetricInputCm","total","setTotal","framesize","setFramesize","useEffect","convert","type","parseInt","parseFloat","className","Container","Tabs","defaultActiveKey","id","Tab","eventKey","title","class","InputGroup","FormControl","aria-label","onChange","e","target","value","placeholder","Append","Text","Button","variant","size","block","onClick","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.355067d6.chunk.js","sourcesContent":["import 'bootstrap/dist/css/bootstrap.min.css';\nimport './style/style.scss';\nimport {Tabs, Tab, Container, FormControl, InputGroup, Button} from 'react-bootstrap';\nimport {useState, useEffect} from 'react';\n\nconst App = () => {\n\n  const [usInputFeet, setUsInputFeet] = useState(0);\n  const [usInputInches, setUsInputInches] = useState(0);\n\n  const [metricInputCm, setMetricInputCm] = useState(0);\n\n  const [total, setTotal] = useState(0);\n  const [framesize, setFramesize] = useState('');\n\n  useEffect(() => {\n    if (total>=147.32 && total <=157.48000000000002) {\n      setFramesize('X-Small Frame (13\" - 14\")')\n    } else if(total>=157.48000000000002 && total <=167.64000000000001) {\n      setFramesize('Small Frame (15\" - 16\")')\n    } else if(total>=167.64000000000001 && total <=177.79999999999998) {\n      setFramesize('Medium Frame (17\" - 18\")')\n    } else if(total>=177.79999999999998 && total <=185.42) {\n      setFramesize('Large Frame (19\" - 20\")')\n    } else if(total>=185.42 && total <=193.04) {\n      setFramesize('X-Large Frame (21\" - 22\")')\n    } else if(total>=193.04 && total <=198.12) {\n      setFramesize('XX-Large Frame (22\" - 24\")')\n    } else {\n      setFramesize('');\n    }\n  }, [total])\n\n  const convert = (type) => {\n    if (type==='us') {\n      setTotal((parseInt(usInputFeet) + (parseFloat(usInputInches) / 12)) * 30.48);\n    } else if(type==='metric') {\n      setTotal(metricInputCm)\n    }\n  }\n\n  return (\n    <div className=\"App\">\n      <heading>\n        <Headings/>\n      </heading>\n      <Container>\n        <Tabs defaultActiveKey=\"us\" id=\"tabbing\">\n          <Tab eventKey=\"us\" title=\"US\">\n            <div class='form_container'>\n              <InputGroup className=\"mb-3\">\n                <FormControl aria-label=\"foot\" type='number' onChange={(e) => {setUsInputFeet(e.target.value)}} placeholder=\"Foot\" />\n                <InputGroup.Append>\n                  <InputGroup.Text>ft</InputGroup.Text>\n                </InputGroup.Append>\n              </InputGroup>\n\n              <InputGroup className=\"mb-3\">\n                <FormControl aria-label=\"inches\" type='number' onChange={(e) => {setUsInputInches(e.target.value)}} placeholder=\"Inches\" />\n                <InputGroup.Append>\n                  <InputGroup.Text>in</InputGroup.Text>\n                </InputGroup.Append>\n              </InputGroup>\n              <Button variant=\"primary\" size=\"lg\" block onClick={() => {convert('us')}}>\n                Check Size\n              </Button>\n            </div>\n            <h1 class=\"framesize\">{framesize}</h1>\n          </Tab>\n          <Tab eventKey=\"metric\" title=\"Metric\">\n            <div class='form_container'>\n              <InputGroup className=\"mb-3\">\n                <FormControl aria-label=\"foot\" type='number' onChange={(e) => {setMetricInputCm(e.target.value)}}  placeholder=\"Centimeter\"/>\n                <InputGroup.Append>\n                  <InputGroup.Text>cm</InputGroup.Text>\n                </InputGroup.Append>\n              </InputGroup>\n              <Button variant=\"primary\" size=\"lg\" block onClick={() => {convert('metric')}}>\n                Check Size\n              </Button>\n            </div>\n            <h1 class=\"framesize\">{framesize}</h1>\n          </Tab>\n        </Tabs>\n      </Container>\n      <footer>\n        <Footer/>\n      </footer>\n    </div>\n  );\n}\n\nconst Headings = () => {\n  return(\n    <h1>Mountain Bike (MTB) Frame Size Calculator</h1>\n  )\n}\n\nconst Footer = () => {\n  return(\n    <div>\n      <p>Made with ðŸ’œ by <a href='https://justinbalaguer.github.io/'>Justin Balaguer</a></p>\n    </div>\n  )\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}